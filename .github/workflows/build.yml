# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: BackEnd - CI/CD(build)

on:
  pull_request:
    branches: [ "develop", "release/v**", "main" ]
  push:
    branches: [ "develop", "release/v**" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # JDK를 17 버전으로 셋팅한다.
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Gradle을 캐싱한다 -> 빌드 속도가 증가하는 효과가 있다.
      - name: Gradle 캐싱
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 프로젝트 저장소에 업로드하면 안되는 설정 파일들을 만들어줍니다.
      - name: Make application.yml & Keys
        run: |
          # src/main/resources 경로를 이동
           cd ./src/main/resources

           # 필요한 yml 파일들을 만들어줍니다.
           touch ./application-dev.yml
           # 등록해둔 Github Secrets의 내용을 이용해서 yml 파일의 내용을 써줍니다.
           echo "$APPLICATION_DEV" > ./application-dev.yml
          
           # key 폴더 만들고 cloudfront 키 넣기
           mkdir key
           cd key
           touch ./private_key.pem
           echo "$CLOUDFRONT_KEY" > ./private_key.pem
        env:
          APPLICATION_DEV: ${{ secrets.APPLICATION_DEV }}
          CLOUDFRONT_KEY: ${{ secrets.CLOUD_FRONT_KEY }}
        shell: bash

      - name: Gradle 권한 부여
        run: chmod +x gradlew

      - name: Gradle로 빌드 실행
        run: ./gradlew bootjar

      - name: Discord 알림 봇
        uses: sarisia/actions-status-discord@v1
        if: ${{ failure() }}
        with:
          title: ❗️ Backend CI failed ❗️
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          color: FFFF00